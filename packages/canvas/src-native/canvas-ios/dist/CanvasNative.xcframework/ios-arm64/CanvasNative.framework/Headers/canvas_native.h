#ifndef CBINDGEN_BINDINGS_H
#define CBINDGEN_BINDINGS_H

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

typedef enum CompositeOperationType {
  SourceOver = 0,
  SourceIn = 1,
  SourceOut = 2,
  SourceAtop = 3,
  DestinationOver = 4,
  DestinationIn = 5,
  DestinationOut = 6,
  DestinationAtop = 7,
  Lighter = 8,
  Copy = 9,
  Xor = 10,
  Multiply = 11,
  Screen = 12,
  Overlay = 13,
  Darken = 14,
  Lighten = 15,
  ColorDodge = 16,
  ColorBurn = 17,
  HardLight = 18,
  SoftLight = 19,
  Difference = 20,
  Exclusion = 21,
  Hue = 22,
  Saturation = 23,
  Color = 24,
  Luminosity = 25,
} CompositeOperationType;

typedef enum FillRule {
  NonZero = 0,
  EvenOdd = 1,
} FillRule;

typedef enum ImageSmoothingQuality {
  Low = 0,
  Medium = 1,
  High = 2,
} ImageSmoothingQuality;

typedef enum LineCap {
  CapButt = 0,
  CapRound = 1,
  CapSquare = 2,
} LineCap;

typedef enum LineJoin {
  JoinRound = 0,
  JoinBevel = 1,
  JoinMiter = 2,
} LineJoin;

typedef enum PaintStyleValueType {
  PaintStyleValueTypeColor = 0,
  PaintStyleValueTypeGradient = 1,
  PaintStyleValueTypePattern = 2,
} PaintStyleValueType;

typedef enum Repetition {
  Repeat = 0,
  RepeatX = 1,
  RepeatY = 2,
  NoRepeat = 3,
} Repetition;

typedef enum TextAlign {
  START = 0,
  LEFT = 1,
  CENTER = 2,
  RIGHT = 3,
  END = 4,
} TextAlign;

typedef enum TextBaseLine {
  TOP = 0,
  HANGING = 1,
  MIDDLE = 2,
  ALPHABETIC = 3,
  IDEOGRAPHIC = 4,
  BOTTOM = 5,
} TextBaseLine;

typedef enum TextDirection {
  LTR = 0,
  RTL = 1,
} TextDirection;

typedef struct Context Context;

typedef struct F32Array {
  float *data;
  uintptr_t data_len;
} F32Array;

typedef struct F64Array {
  double *data;
  uintptr_t data_len;
} F64Array;

typedef struct I16Array {
  int16_t *data;
  uintptr_t data_len;
} I16Array;

typedef struct I32Array {
  int32_t *data;
  uintptr_t data_len;
} I32Array;

typedef struct I8Array {
  int8_t *data;
  uintptr_t data_len;
} I8Array;

typedef struct U16Array {
  uint16_t *data;
  uintptr_t data_len;
} U16Array;

typedef struct U32Array {
  uint32_t *data;
  uintptr_t data_len;
} U32Array;

typedef struct U8Array {
  uint8_t *data;
  uintptr_t data_len;
} U8Array;

typedef struct PaintStyleValue {
  long long value;
  enum PaintStyleValueType value_type;
} PaintStyleValue;

#if defined(TARGET_OS_ANDROID)
/**
 * AndroidBitmap functions result code.
 */
typedef int32_t _bindgen_ty_1;
#endif

#if defined(TARGET_OS_ANDROID)
/**
 * Bitmap pixel format.
 */
typedef uint32_t AndroidBitmapFormat;
#endif

#if defined(TARGET_OS_ANDROID)
/**
 * Operation was successful.
 */
#define ANDROID_BITMAP_RESULT_SUCCESS 0
#endif

#if defined(TARGET_OS_ANDROID)
/**
 * Bad parameter.
 */
#define ANDROID_BITMAP_RESULT_BAD_PARAMETER -1
#endif

#if defined(TARGET_OS_ANDROID)
/**
 * JNI exception occured.
 */
#define ANDROID_BITMAP_RESULT_JNI_EXCEPTION -2
#endif

#if defined(TARGET_OS_ANDROID)
/**
 * Allocation failed.
 */
#define ANDROID_BITMAP_RESULT_ALLOCATION_FAILED -3
#endif

#if defined(TARGET_OS_ANDROID)
/**
 * No format.
 */
#define AndroidBitmapFormat_ANDROID_BITMAP_FORMAT_NONE 0
#endif

#if defined(TARGET_OS_ANDROID)
/**
 * Red: 8 bits, Green: 8 bits, Blue: 8 bits, Alpha: 8 bits.
 */
#define AndroidBitmapFormat_ANDROID_BITMAP_FORMAT_RGBA_8888 1
#endif

#if defined(TARGET_OS_ANDROID)
/**
 * Red: 5 bits, Green: 6 bits, Blue: 5 bits.
 */
#define AndroidBitmapFormat_ANDROID_BITMAP_FORMAT_RGB_565 4
#endif

#if defined(TARGET_OS_ANDROID)
/**
 * Deprecated in API level 13. Because of the poor quality of this configuration, it is advised to use ARGB_8888 instead.
 */
#define AndroidBitmapFormat_ANDROID_BITMAP_FORMAT_RGBA_4444 7
#endif

#if defined(TARGET_OS_ANDROID)
/**
 * Alpha: 8 bits.
 */
#define AndroidBitmapFormat_ANDROID_BITMAP_FORMAT_A_8 8
#endif

void destroy_f32_array(struct F32Array *array);

void destroy_f64_array(struct F64Array *array);

void destroy_i16_array(struct I16Array *array);

void destroy_i32_array(struct I32Array *array);

void destroy_i8_array(struct I8Array *array);

void destroy_paint_style_value(long long value);

void destroy_u16_array(struct U16Array *array);

void destroy_u32_array(struct U32Array *array);

void destroy_u8_array(struct U8Array *array);

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSCanvas_nativeInitContext(JNIEnv,
                                                               JClass,
                                                               jfloat width,
                                                               jfloat height,
                                                               jfloat density,
                                                               jint buffer_id,
                                                               jint samples,
                                                               jboolean alpha,
                                                               jint font_color,
                                                               jfloat ppi,
                                                               jint direction);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSCanvas_nativeInitContextWithCustomSurface(JNIEnv,
                                                                                JClass,
                                                                                jfloat width,
                                                                                jfloat height,
                                                                                jfloat density,
                                                                                jboolean alpha,
                                                                                jint font_color,
                                                                                jfloat ppi,
                                                                                jint direction);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvas_nativeDestroyContext(JNIEnv, JClass, jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvas_nativeResizeSurface(JNIEnv,
                                                                JClass,
                                                                jlong context,
                                                                jfloat width,
                                                                jfloat height,
                                                                jfloat density,
                                                                jint buffer_id,
                                                                jint samples,
                                                                jboolean alpha,
                                                                jfloat ppi);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvas_nativeResizeCustomSurface(JNIEnv,
                                                                      JClass,
                                                                      jlong context,
                                                                      jfloat width,
                                                                      jfloat height,
                                                                      jfloat density,
                                                                      jboolean alpha,
                                                                      jfloat ppi);
#endif

#if defined(TARGET_OS_ANDROID)
jstring Java_org_nativescript_canvas_TNSCanvas_nativeDataURL(JNIEnv env,
                                                             JClass,
                                                             jlong context,
                                                             JString format,
                                                             jfloat quality);
#endif

#if defined(TARGET_OS_ANDROID)
jbyteArray Java_org_nativescript_canvas_TNSCanvas_nativeSnapshotCanvas(JNIEnv env,
                                                                       JClass,
                                                                       jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvas_nativeFlush(JNIEnv, JClass, jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvas_nativeCustomWithBitmapFlush(JNIEnv env,
                                                                        JClass,
                                                                        jlong context,
                                                                        JObject bitmap);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetDirection(JNIEnv,
                                                                                 JClass,
                                                                                 jlong context,
                                                                                 jint direction);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetDirection(JNIEnv,
                                                                                 JClass,
                                                                                 jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetFillStyle(JNIEnv,
                                                                                 JClass,
                                                                                 jlong context,
                                                                                 jlong style);
#endif

#if defined(TARGET_OS_ANDROID)
jobject Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetFillStyle(JNIEnv env,
                                                                                    JClass,
                                                                                    jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetFilter(JNIEnv env,
                                                                              JClass,
                                                                              jlong context,
                                                                              JString filter);
#endif

#if defined(TARGET_OS_ANDROID)
jstring Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetFilter(JNIEnv env,
                                                                                 JClass,
                                                                                 jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetFont(JNIEnv env,
                                                                            JClass,
                                                                            jlong context,
                                                                            JString filter);
#endif

#if defined(TARGET_OS_ANDROID)
jstring Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetFont(JNIEnv env,
                                                                               JClass,
                                                                               jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetGlobalAlpha(JNIEnv,
                                                                                   JClass,
                                                                                   jlong context,
                                                                                   jfloat alpha);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetGlobalAlpha(JNIEnv,
                                                                                     JClass,
                                                                                     jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetGlobalCompositeOperation(JNIEnv,
                                                                                                JClass,
                                                                                                jlong context,
                                                                                                jint operation);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetGlobalCompositeOperation(JNIEnv,
                                                                                                JClass,
                                                                                                jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetImageSmoothingEnabled(JNIEnv,
                                                                                             JClass,
                                                                                             jlong context,
                                                                                             jboolean enabled);
#endif

#if defined(TARGET_OS_ANDROID)
jboolean Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetImageSmoothingEnabled(JNIEnv,
                                                                                                 JClass,
                                                                                                 jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetImageSmoothingQuality(JNIEnv,
                                                                                             JClass,
                                                                                             jlong context,
                                                                                             jint quality);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetImageSmoothingQuality(JNIEnv,
                                                                                             JClass,
                                                                                             jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetLineCap(JNIEnv,
                                                                               JClass,
                                                                               jlong context,
                                                                               jint cap);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetLineCap(JNIEnv,
                                                                               JClass,
                                                                               jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetLineDashOffset(JNIEnv,
                                                                                      JClass,
                                                                                      jlong context,
                                                                                      jfloat offset);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetLineDashOffset(JNIEnv,
                                                                                        JClass,
                                                                                        jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetLineJoin(JNIEnv,
                                                                                JClass,
                                                                                jlong context,
                                                                                jint join);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetLineJoin(JNIEnv,
                                                                                JClass,
                                                                                jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetLineWidth(JNIEnv,
                                                                                 JClass,
                                                                                 jlong context,
                                                                                 jfloat width);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetLineWidth(JNIEnv,
                                                                                   JClass,
                                                                                   jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetMiterLimit(JNIEnv,
                                                                                  JClass,
                                                                                  jlong context,
                                                                                  jfloat limit);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetMiterLimit(JNIEnv,
                                                                                    JClass,
                                                                                    jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetShadowBlur(JNIEnv,
                                                                                  JClass,
                                                                                  jlong context,
                                                                                  jfloat blur);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetShadowBlur(JNIEnv,
                                                                                    JClass,
                                                                                    jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetShadowColor(JNIEnv,
                                                                                   JClass,
                                                                                   jlong context,
                                                                                   uint8_t r,
                                                                                   uint8_t g,
                                                                                   uint8_t b,
                                                                                   uint8_t a);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetShadowColorString(JNIEnv env,
                                                                                         JClass,
                                                                                         jlong context,
                                                                                         JString color);
#endif

#if defined(TARGET_OS_ANDROID)
jstring Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetShadowColor(JNIEnv env,
                                                                                      JClass,
                                                                                      jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetShadowOffsetX(JNIEnv,
                                                                                     JClass,
                                                                                     jlong context,
                                                                                     jfloat x);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetShadowOffsetX(JNIEnv,
                                                                                       JClass,
                                                                                       jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetShadowOffsetY(JNIEnv,
                                                                                     JClass,
                                                                                     jlong context,
                                                                                     jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetShadowOffsetY(JNIEnv,
                                                                                       JClass,
                                                                                       jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetStrokeStyle(JNIEnv,
                                                                                   JClass,
                                                                                   jlong context,
                                                                                   jlong style);
#endif

#if defined(TARGET_OS_ANDROID)
jobject Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetStrokeStyle(JNIEnv env,
                                                                                      JClass,
                                                                                      jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetTextAlign(JNIEnv,
                                                                                 JClass,
                                                                                 jlong context,
                                                                                 jint align);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetTextAlign(JNIEnv,
                                                                                 JClass,
                                                                                 jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetTextBaseline(JNIEnv,
                                                                                    JClass,
                                                                                    jlong context,
                                                                                    jint baseline);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetTextBaseline(JNIEnv,
                                                                                    JClass,
                                                                                    jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeArc(JNIEnv,
                                                                        JClass,
                                                                        jlong context,
                                                                        jfloat x,
                                                                        jfloat y,
                                                                        jfloat radius,
                                                                        jfloat start_angle,
                                                                        jfloat end_angle,
                                                                        jboolean anti_clockwise);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeArcTo(JNIEnv,
                                                                          JClass,
                                                                          jlong context,
                                                                          jfloat x1,
                                                                          jfloat y1,
                                                                          jfloat x2,
                                                                          jfloat y2,
                                                                          jfloat radius);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeBeginPath(JNIEnv,
                                                                              JClass,
                                                                              jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeBezierCurveTo(JNIEnv,
                                                                                  JClass,
                                                                                  jlong context,
                                                                                  jfloat cp1x,
                                                                                  jfloat cp1y,
                                                                                  jfloat cp2x,
                                                                                  jfloat cp2y,
                                                                                  jfloat x,
                                                                                  jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeClearRect(JNIEnv,
                                                                              JClass,
                                                                              jlong context,
                                                                              jfloat x,
                                                                              jfloat y,
                                                                              jfloat width,
                                                                              jfloat height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeClip(JNIEnv,
                                                                         JClass,
                                                                         jlong context,
                                                                         jlong path,
                                                                         jint rule);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeClipRule(JNIEnv,
                                                                             JClass,
                                                                             jlong context,
                                                                             jint rule);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeClosePath(JNIEnv,
                                                                              JClass,
                                                                              jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeCreateImageData(JNIEnv,
                                                                                     JClass,
                                                                                     jint width,
                                                                                     jint height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeCreateLinearGradient(JNIEnv,
                                                                                          JClass,
                                                                                          jlong context,
                                                                                          jfloat x0,
                                                                                          jfloat y0,
                                                                                          jfloat x1,
                                                                                          jfloat y1);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeCreatePatternEncoded(JNIEnv env,
                                                                                          JClass,
                                                                                          jlong context,
                                                                                          jbyteArray image_data,
                                                                                          jint repetition);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeCreatePattern(JNIEnv env,
                                                                                   JClass,
                                                                                   jlong context,
                                                                                   jbyteArray image_data,
                                                                                   jint width,
                                                                                   jint height,
                                                                                   jint repetition);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeCreatePatternWithAsset(JNIEnv,
                                                                                            JClass,
                                                                                            jlong context,
                                                                                            jlong asset,
                                                                                            jint repetition);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeCreateRadialGradient(JNIEnv,
                                                                                          JClass,
                                                                                          jlong context,
                                                                                          jfloat x0,
                                                                                          jfloat y0,
                                                                                          jfloat r0,
                                                                                          jfloat x1,
                                                                                          jfloat y1,
                                                                                          jfloat r1);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeDrawImageDxDyWithBitmap(JNIEnv env,
                                                                                            JClass,
                                                                                            jlong context,
                                                                                            JObject bitmap,
                                                                                            jfloat width,
                                                                                            jfloat height,
                                                                                            jfloat dx,
                                                                                            jfloat dy);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeDrawImageDxDy(JNIEnv env,
                                                                                  JClass,
                                                                                  jlong context,
                                                                                  jbyteArray image_data,
                                                                                  jfloat width,
                                                                                  jfloat height,
                                                                                  jfloat dx,
                                                                                  jfloat dy);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeDrawImageDxDyWithAsset(JNIEnv,
                                                                                           JClass,
                                                                                           jlong context,
                                                                                           jlong asset,
                                                                                           jfloat dx,
                                                                                           jfloat dy);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeDrawImageDxDyDwDhWithBitmap(JNIEnv env,
                                                                                                JClass,
                                                                                                jlong context,
                                                                                                JObject bitmap,
                                                                                                jfloat width,
                                                                                                jfloat height,
                                                                                                jfloat dx,
                                                                                                jfloat dy,
                                                                                                jfloat d_width,
                                                                                                jfloat d_height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeDrawImageDxDyDwDh(JNIEnv env,
                                                                                      JClass,
                                                                                      jlong context,
                                                                                      jbyteArray image_data,
                                                                                      jfloat width,
                                                                                      jfloat height,
                                                                                      jfloat dx,
                                                                                      jfloat dy,
                                                                                      jfloat d_width,
                                                                                      jfloat d_height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeDrawImageDxDyDwDhWithAsset(JNIEnv,
                                                                                               JClass,
                                                                                               jlong context,
                                                                                               jlong asset,
                                                                                               jfloat dx,
                                                                                               jfloat dy,
                                                                                               jfloat d_width,
                                                                                               jfloat d_height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeDrawImageWithBitmap(JNIEnv env,
                                                                                        JClass,
                                                                                        jlong context,
                                                                                        JObject bitmap,
                                                                                        jfloat width,
                                                                                        jfloat height,
                                                                                        jfloat sx,
                                                                                        jfloat sy,
                                                                                        jfloat s_width,
                                                                                        jfloat s_height,
                                                                                        jfloat dx,
                                                                                        jfloat dy,
                                                                                        jfloat d_width,
                                                                                        jfloat d_height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeDrawImageWithAsset(JNIEnv,
                                                                                       JClass,
                                                                                       jlong context,
                                                                                       jlong asset,
                                                                                       jfloat sx,
                                                                                       jfloat sy,
                                                                                       jfloat s_width,
                                                                                       jfloat s_height,
                                                                                       jfloat dx,
                                                                                       jfloat dy,
                                                                                       jfloat d_width,
                                                                                       jfloat d_height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeDrawImage(JNIEnv env,
                                                                              JClass,
                                                                              jlong context,
                                                                              jbyteArray image_data,
                                                                              jfloat width,
                                                                              jfloat height,
                                                                              jfloat sx,
                                                                              jfloat sy,
                                                                              jfloat s_width,
                                                                              jfloat s_height,
                                                                              jfloat dx,
                                                                              jfloat dy,
                                                                              jfloat d_width,
                                                                              jfloat d_height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeEllipse(JNIEnv,
                                                                            JClass,
                                                                            jlong context,
                                                                            jfloat x,
                                                                            jfloat y,
                                                                            jfloat radius_x,
                                                                            jfloat radius_y,
                                                                            jfloat rotation,
                                                                            jfloat start_angle,
                                                                            jfloat end_angle,
                                                                            jboolean anticlockwise);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeFill(JNIEnv,
                                                                         JClass,
                                                                         jlong context,
                                                                         jlong path,
                                                                         jint rule);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeFillRect(JNIEnv,
                                                                             JClass,
                                                                             jlong context,
                                                                             jfloat x,
                                                                             jfloat y,
                                                                             jfloat width,
                                                                             jfloat height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeFillText(JNIEnv env,
                                                                             JClass,
                                                                             jlong context,
                                                                             JString text,
                                                                             jfloat x,
                                                                             jfloat y,
                                                                             jfloat width);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetImageData(JNIEnv,
                                                                                  JClass,
                                                                                  jlong context,
                                                                                  jfloat sx,
                                                                                  jfloat sy,
                                                                                  jfloat sw,
                                                                                  jfloat sh);
#endif

#if defined(TARGET_OS_ANDROID)
jfloatArray Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetLineDash(JNIEnv env,
                                                                                       JClass,
                                                                                       jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeGetTansform(JNIEnv,
                                                                                 JClass,
                                                                                 jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
bool Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeIsPointInPath(JNIEnv,
                                                                                  JClass,
                                                                                  jlong context,
                                                                                  jlong path,
                                                                                  jfloat x,
                                                                                  jfloat y,
                                                                                  jint rule);
#endif

#if defined(TARGET_OS_ANDROID)
bool Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeIsPointInStroke(JNIEnv,
                                                                                    JClass,
                                                                                    jlong context,
                                                                                    jlong path,
                                                                                    jfloat x,
                                                                                    jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeLineTo(JNIEnv,
                                                                           JClass,
                                                                           jlong context,
                                                                           jfloat x,
                                                                           jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeMeasureText(JNIEnv env,
                                                                                 JClass,
                                                                                 jlong context,
                                                                                 JString text);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeMoveTo(JNIEnv,
                                                                           JClass,
                                                                           jlong context,
                                                                           jfloat x,
                                                                           jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativePutImageData(JNIEnv,
                                                                                 JClass,
                                                                                 jlong context,
                                                                                 jlong image_data,
                                                                                 jfloat dx,
                                                                                 jfloat dy,
                                                                                 jfloat dirty_x,
                                                                                 jfloat dirty_y,
                                                                                 jfloat dirty_width,
                                                                                 jfloat dirty_height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeQuadraticCurveTo(JNIEnv,
                                                                                     JClass,
                                                                                     jlong context,
                                                                                     jfloat cpx,
                                                                                     jfloat cpy,
                                                                                     jfloat x,
                                                                                     jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeRect(JNIEnv,
                                                                         JClass,
                                                                         jlong context,
                                                                         jfloat x,
                                                                         jfloat y,
                                                                         jfloat width,
                                                                         jfloat height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeResetTransform(JNIEnv,
                                                                                   JClass,
                                                                                   jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeRestore(JNIEnv,
                                                                            JClass,
                                                                            jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeRotate(JNIEnv,
                                                                           JClass,
                                                                           jlong context,
                                                                           jfloat angle);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSave(JNIEnv,
                                                                         JClass,
                                                                         jlong context);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeScale(JNIEnv,
                                                                          JClass,
                                                                          jlong context,
                                                                          jfloat x,
                                                                          jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetLineDash(JNIEnv env,
                                                                                JClass,
                                                                                jlong context,
                                                                                jfloatArray dash);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetTransform(JNIEnv,
                                                                                 JClass,
                                                                                 jlong context,
                                                                                 jfloat a,
                                                                                 jfloat b,
                                                                                 jfloat c,
                                                                                 jfloat d,
                                                                                 jfloat e,
                                                                                 jfloat f);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetTransformMatrix(JNIEnv,
                                                                                       JClass,
                                                                                       jlong context,
                                                                                       jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeStroke(JNIEnv,
                                                                           JClass,
                                                                           jlong context,
                                                                           jlong path);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeStrokeRect(JNIEnv,
                                                                               JClass,
                                                                               jlong context,
                                                                               jfloat x,
                                                                               jfloat y,
                                                                               jfloat width,
                                                                               jfloat height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeStrokeText(JNIEnv env,
                                                                               JClass,
                                                                               jlong context,
                                                                               JString text,
                                                                               jfloat x,
                                                                               jfloat y,
                                                                               jfloat width);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeTransform(JNIEnv,
                                                                              JClass,
                                                                              jlong context,
                                                                              jfloat a,
                                                                              jfloat b,
                                                                              jfloat c,
                                                                              jfloat d,
                                                                              jfloat e,
                                                                              jfloat f);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeTranslate(JNIEnv,
                                                                              JClass,
                                                                              jlong context,
                                                                              jfloat x,
                                                                              jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TextureRender_nativeDrawFrame(JNIEnv env,
                                                                JClass,
                                                                JObject surface_texture_object,
                                                                bool flip_y_web_gl,
                                                                jint fbo,
                                                                jint rbo,
                                                                jint program,
                                                                jint external_texture,
                                                                jint sampler_pos,
                                                                jint array_buffer,
                                                                jint pos,
                                                                jfloatArray matrix,
                                                                jint matrix_pos,
                                                                jint width,
                                                                jint height,
                                                                jint render_width,
                                                                jint render_height,
                                                                jint internal_format,
                                                                jint format,
                                                                jint draw_count);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeFlipInPlace3D(JNIEnv env,
                                                                                JClass,
                                                                                JByteBuffer pixels,
                                                                                jint bytesPerPixel,
                                                                                jint height,
                                                                                jint depth);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexImage3DBuffer(JNIEnv env,
                                                                                   JClass,
                                                                                   jint target,
                                                                                   jint level,
                                                                                   jint internalformat,
                                                                                   jint width,
                                                                                   jint height,
                                                                                   jint depth,
                                                                                   jint border,
                                                                                   jint format,
                                                                                   jint image_type,
                                                                                   JByteBuffer buffer,
                                                                                   jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexImage3DByteArray(JNIEnv env,
                                                                                      JClass,
                                                                                      jint target,
                                                                                      jint level,
                                                                                      jint internalformat,
                                                                                      jint width,
                                                                                      jint height,
                                                                                      jint depth,
                                                                                      jint border,
                                                                                      jint format,
                                                                                      jint image_type,
                                                                                      jbyteArray byteArray,
                                                                                      jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexImage3DShortArray(JNIEnv env,
                                                                                       JClass,
                                                                                       jint target,
                                                                                       jint level,
                                                                                       jint internalformat,
                                                                                       jint width,
                                                                                       jint height,
                                                                                       jint depth,
                                                                                       jint border,
                                                                                       jint format,
                                                                                       jint image_type,
                                                                                       jshortArray shortArray,
                                                                                       jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexImage3DIntArray(JNIEnv env,
                                                                                     JClass,
                                                                                     jint target,
                                                                                     jint level,
                                                                                     jint internalformat,
                                                                                     jint width,
                                                                                     jint height,
                                                                                     jint depth,
                                                                                     jint border,
                                                                                     jint format,
                                                                                     jint image_type,
                                                                                     jintArray intArray,
                                                                                     jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexImage3DFloatArray(JNIEnv env,
                                                                                       JClass,
                                                                                       jint target,
                                                                                       jint level,
                                                                                       jint internalformat,
                                                                                       jint width,
                                                                                       jint height,
                                                                                       jint depth,
                                                                                       jint border,
                                                                                       jint format,
                                                                                       jint image_type,
                                                                                       jfloatArray floatArray,
                                                                                       jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexImage3DDoubleArray(JNIEnv env,
                                                                                        JClass,
                                                                                        jint target,
                                                                                        jint level,
                                                                                        jint internalformat,
                                                                                        jint width,
                                                                                        jint height,
                                                                                        jint depth,
                                                                                        jint border,
                                                                                        jint format,
                                                                                        jint image_type,
                                                                                        jdoubleArray doubleArray,
                                                                                        jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexImage3DLongArray(JNIEnv env,
                                                                                      JClass,
                                                                                      jint target,
                                                                                      jint level,
                                                                                      jint internalformat,
                                                                                      jint width,
                                                                                      jint height,
                                                                                      jint depth,
                                                                                      jint border,
                                                                                      jint format,
                                                                                      jint image_type,
                                                                                      jlongArray longArray,
                                                                                      jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexImage3DAsset(JNIEnv _env,
                                                                                  JClass,
                                                                                  jint target,
                                                                                  jint level,
                                                                                  jint internalformat,
                                                                                  jint width,
                                                                                  jint height,
                                                                                  jint depth,
                                                                                  jint border,
                                                                                  jint format,
                                                                                  jint image_type,
                                                                                  jlong asset,
                                                                                  jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexImage3DBitmap(JNIEnv env,
                                                                                   JClass,
                                                                                   jint target,
                                                                                   jint level,
                                                                                   jint internalformat,
                                                                                   jint width,
                                                                                   jint height,
                                                                                   jint depth,
                                                                                   jint border,
                                                                                   jint format,
                                                                                   jint image_type,
                                                                                   JObject bitmap,
                                                                                   jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexSubImage3DBuffer(JNIEnv env,
                                                                                      JClass,
                                                                                      jint target,
                                                                                      jint level,
                                                                                      jint xoffset,
                                                                                      jint yoffset,
                                                                                      jint zoffset,
                                                                                      jint width,
                                                                                      jint height,
                                                                                      jint depth,
                                                                                      jint format,
                                                                                      jint image_type,
                                                                                      JByteBuffer buffer,
                                                                                      jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexSubImage3DByteArray(JNIEnv env,
                                                                                         JClass,
                                                                                         jint target,
                                                                                         jint level,
                                                                                         jint xoffset,
                                                                                         jint yoffset,
                                                                                         jint zoffset,
                                                                                         jint width,
                                                                                         jint height,
                                                                                         jint depth,
                                                                                         jint format,
                                                                                         jint image_type,
                                                                                         jbyteArray byteArray,
                                                                                         jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexSubImage3DShortArray(JNIEnv env,
                                                                                          JClass,
                                                                                          jint target,
                                                                                          jint level,
                                                                                          jint xoffset,
                                                                                          jint yoffset,
                                                                                          jint zoffset,
                                                                                          jint width,
                                                                                          jint height,
                                                                                          jint depth,
                                                                                          jint format,
                                                                                          jint image_type,
                                                                                          jshortArray shortArray,
                                                                                          jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexSubImage3DIntArray(JNIEnv env,
                                                                                        JClass,
                                                                                        jint target,
                                                                                        jint level,
                                                                                        jint xoffset,
                                                                                        jint yoffset,
                                                                                        jint zoffset,
                                                                                        jint width,
                                                                                        jint height,
                                                                                        jint depth,
                                                                                        jint format,
                                                                                        jint image_type,
                                                                                        jintArray intArray,
                                                                                        jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexSubImage3DLongArray(JNIEnv env,
                                                                                         JClass,
                                                                                         jint target,
                                                                                         jint level,
                                                                                         jint xoffset,
                                                                                         jint yoffset,
                                                                                         jint zoffset,
                                                                                         jint width,
                                                                                         jint height,
                                                                                         jint depth,
                                                                                         jint format,
                                                                                         jint image_type,
                                                                                         jlongArray longArray,
                                                                                         jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexSubImage3DFloatArray(JNIEnv env,
                                                                                          JClass,
                                                                                          jint target,
                                                                                          jint level,
                                                                                          jint xoffset,
                                                                                          jint yoffset,
                                                                                          jint zoffset,
                                                                                          jint width,
                                                                                          jint height,
                                                                                          jint depth,
                                                                                          jint format,
                                                                                          jint image_type,
                                                                                          jfloatArray floatArray,
                                                                                          jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexSubImage3DDoubleArray(JNIEnv env,
                                                                                           JClass,
                                                                                           jint target,
                                                                                           jint level,
                                                                                           jint xoffset,
                                                                                           jint yoffset,
                                                                                           jint zoffset,
                                                                                           jint width,
                                                                                           jint height,
                                                                                           jint depth,
                                                                                           jint format,
                                                                                           jint image_type,
                                                                                           jdoubleArray doubleArray,
                                                                                           jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexSubImage3DAsset(JNIEnv _env,
                                                                                     JClass,
                                                                                     jint target,
                                                                                     jint level,
                                                                                     jint xoffset,
                                                                                     jint yoffset,
                                                                                     jint zoffset,
                                                                                     jint width,
                                                                                     jint height,
                                                                                     jint depth,
                                                                                     jint format,
                                                                                     jint image_type,
                                                                                     jlong asset,
                                                                                     jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGL2RenderingContext_nativeTexSubImage3DBitmap(JNIEnv env,
                                                                                      JClass,
                                                                                      jint target,
                                                                                      jint level,
                                                                                      jint xoffset,
                                                                                      jint yoffset,
                                                                                      jint zoffset,
                                                                                      jint width,
                                                                                      jint height,
                                                                                      jint depth,
                                                                                      jint format,
                                                                                      jint image_type,
                                                                                      JObject bitmap,
                                                                                      jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexImage2DTexture(JNIEnv _env,
                                                                                   JClass,
                                                                                   jint width,
                                                                                   jint height,
                                                                                   jint src_texture);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeFlipBufferInPlace(JNIEnv env,
                                                                                   JClass,
                                                                                   JByteBuffer pixels,
                                                                                   jint bytesPerPixel,
                                                                                   jint height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeGetVertexAttribOffset(JNIEnv env,
                                                                                       JClass,
                                                                                       jint index,
                                                                                       jint pname,
                                                                                       JByteBuffer buffer);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeBindBuffer(JNIEnv _env,
                                                                            JClass,
                                                                            jint target,
                                                                            jint buffer);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeReadPixels(JNIEnv _env,
                                                                            JClass,
                                                                            jint x,
                                                                            jint y,
                                                                            jint width,
                                                                            jint height,
                                                                            jint format,
                                                                            jint pixel_type);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexImage2DByteArray(JNIEnv env,
                                                                                     JClass,
                                                                                     jint target,
                                                                                     jint level,
                                                                                     jint internalformat,
                                                                                     jint width,
                                                                                     jint height,
                                                                                     jint border,
                                                                                     jint format,
                                                                                     jint image_type,
                                                                                     jbyteArray byteArray,
                                                                                     jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexImage2DShortArray(JNIEnv env,
                                                                                      JClass,
                                                                                      jint target,
                                                                                      jint level,
                                                                                      jint internalformat,
                                                                                      jint width,
                                                                                      jint height,
                                                                                      jint border,
                                                                                      jint format,
                                                                                      jint image_type,
                                                                                      jshortArray shortArray,
                                                                                      jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexImage2DIntArray(JNIEnv env,
                                                                                    JClass,
                                                                                    jint target,
                                                                                    jint level,
                                                                                    jint internalformat,
                                                                                    jint width,
                                                                                    jint height,
                                                                                    jint border,
                                                                                    jint format,
                                                                                    jint image_type,
                                                                                    jintArray intArray,
                                                                                    jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexImage2DFloatArray(JNIEnv env,
                                                                                      JClass,
                                                                                      jint target,
                                                                                      jint level,
                                                                                      jint internalformat,
                                                                                      jint width,
                                                                                      jint height,
                                                                                      jint border,
                                                                                      jint format,
                                                                                      jint image_type,
                                                                                      jfloatArray floatArray,
                                                                                      jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexImage2DBuffer(JNIEnv env,
                                                                                  JClass,
                                                                                  jint target,
                                                                                  jint level,
                                                                                  jint internalformat,
                                                                                  jint width,
                                                                                  jint height,
                                                                                  jint border,
                                                                                  jint format,
                                                                                  jint image_type,
                                                                                  JByteBuffer buffer,
                                                                                  jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexImage2DAsset(JNIEnv _env,
                                                                                 JClass,
                                                                                 jint target,
                                                                                 jint level,
                                                                                 jint internalformat,
                                                                                 jint border,
                                                                                 jint format,
                                                                                 jint image_type,
                                                                                 jlong asset,
                                                                                 jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexImage2DBitmap(JNIEnv env,
                                                                                  JClass,
                                                                                  jint target,
                                                                                  jint level,
                                                                                  jint internalformat,
                                                                                  jint width,
                                                                                  jint height,
                                                                                  jint border,
                                                                                  jint format,
                                                                                  jint image_type,
                                                                                  JObject bitmap,
                                                                                  jboolean flipY);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexSubImage2DByteArray(JNIEnv env,
                                                                                        JClass,
                                                                                        jint target,
                                                                                        jint level,
                                                                                        jint xoffset,
                                                                                        jint yoffset,
                                                                                        jint width,
                                                                                        jint height,
                                                                                        jint format,
                                                                                        jint image_type,
                                                                                        jbyteArray byteArray,
                                                                                        jboolean flip_y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexSubImage2DShortArray(JNIEnv env,
                                                                                         JClass,
                                                                                         jint target,
                                                                                         jint level,
                                                                                         jint xoffset,
                                                                                         jint yoffset,
                                                                                         jint width,
                                                                                         jint height,
                                                                                         jint format,
                                                                                         jint image_type,
                                                                                         jshortArray shortArray,
                                                                                         jboolean flip_y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexSubImage2DIntArray(JNIEnv env,
                                                                                       JClass,
                                                                                       jint target,
                                                                                       jint level,
                                                                                       jint xoffset,
                                                                                       jint yoffset,
                                                                                       jint width,
                                                                                       jint height,
                                                                                       jint format,
                                                                                       jint image_type,
                                                                                       jintArray intArray,
                                                                                       jboolean flip_y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexSubImage2DFloatArray(JNIEnv env,
                                                                                         JClass,
                                                                                         jint target,
                                                                                         jint level,
                                                                                         jint xoffset,
                                                                                         jint yoffset,
                                                                                         jint width,
                                                                                         jint height,
                                                                                         jint format,
                                                                                         jint image_type,
                                                                                         jfloatArray floatArray,
                                                                                         jboolean flip_y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexSubImage2DBuffer(JNIEnv env,
                                                                                     JClass,
                                                                                     jint target,
                                                                                     jint level,
                                                                                     jint xoffset,
                                                                                     jint yoffset,
                                                                                     jint width,
                                                                                     jint height,
                                                                                     jint format,
                                                                                     jint image_type,
                                                                                     JByteBuffer buffer,
                                                                                     jboolean flip_y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexSubImage2DAsset(JNIEnv _env,
                                                                                    JClass,
                                                                                    jint target,
                                                                                    jint level,
                                                                                    jint xoffset,
                                                                                    jint yoffset,
                                                                                    jint width,
                                                                                    jint height,
                                                                                    jint format,
                                                                                    jint image_type,
                                                                                    jlong asset,
                                                                                    jboolean flip_y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeTexSubImage2DBitmap(JNIEnv env,
                                                                                     JClass,
                                                                                     jint target,
                                                                                     jint level,
                                                                                     jint xoffset,
                                                                                     jint yoffset,
                                                                                     jint width,
                                                                                     jint height,
                                                                                     jint format,
                                                                                     jint image_type,
                                                                                     JObject bitmap,
                                                                                     jboolean flip_y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSWebGLRenderingContext_nativeVertexAttribPointer(JNIEnv _env,
                                                                                     JClass,
                                                                                     jint index,
                                                                                     jint size,
                                                                                     jint pointer_type,
                                                                                     jboolean normalized,
                                                                                     jint stride,
                                                                                     jlong offset);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasGradient_nativeAddColorStop(JNIEnv env,
                                                                       JClass,
                                                                       long long style,
                                                                       float stop,
                                                                       JString color);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageAsset_nativeInit(JNIEnv, JClass);
#endif

#if defined(TARGET_OS_ANDROID)
jbyteArray Java_org_nativescript_canvas_TNSImageAsset_nativeGetBytes(JNIEnv env,
                                                                     JClass,
                                                                     jlong asset);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSImageAsset_nativeGetWidth(JNIEnv _env, JClass, jlong asset);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSImageAsset_nativeGetHeight(JNIEnv _env, JClass, jlong asset);
#endif

#if defined(TARGET_OS_ANDROID)
jboolean Java_org_nativescript_canvas_TNSImageAsset_nativeScale(JNIEnv _env,
                                                                JClass,
                                                                jlong asset,
                                                                jint x,
                                                                jint y);
#endif

#if defined(TARGET_OS_ANDROID)
jboolean Java_org_nativescript_canvas_TNSImageAsset_nativeFlipX(JNIEnv _env, JClass, jlong asset);
#endif

#if defined(TARGET_OS_ANDROID)
jboolean Java_org_nativescript_canvas_TNSImageAsset_nativeFlipY(JNIEnv _env, JClass, jlong asset);
#endif

#if defined(TARGET_OS_ANDROID)
jboolean Java_org_nativescript_canvas_TNSImageAsset_nativeSave(JNIEnv env,
                                                               JClass,
                                                               jlong asset,
                                                               JString path,
                                                               jint format);
#endif

#if defined(TARGET_OS_ANDROID)
jstring Java_org_nativescript_canvas_TNSImageAsset_nativeGetError(JNIEnv env, JClass, jlong asset);
#endif

#if defined(TARGET_OS_ANDROID)
jboolean Java_org_nativescript_canvas_TNSImageAsset_nativeHasError(JNIEnv _env,
                                                                   JClass,
                                                                   jlong asset);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSImageAsset_nativeDestroy(JNIEnv _env, JClass, jlong asset);
#endif

#if defined(TARGET_OS_ANDROID)
jboolean Java_org_nativescript_canvas_TNSImageAsset_nativeLoadAssetPath(JNIEnv env,
                                                                        JClass,
                                                                        jlong asset,
                                                                        JString path);
#endif

#if defined(TARGET_OS_ANDROID)
jboolean Java_org_nativescript_canvas_TNSImageAsset_nativeLoadAssetBytes(JNIEnv env,
                                                                         JClass,
                                                                         jlong asset,
                                                                         jbyteArray buffer);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromBuffer(JNIEnv env,
                                                                         JClass,
                                                                         JByteBuffer image_buffer,
                                                                         jfloat image_width,
                                                                         jfloat image_height,
                                                                         jboolean flip_y,
                                                                         jint premultiply_alpha,
                                                                         jint color_space_conversion,
                                                                         jint resize_quality,
                                                                         jfloat resize_width,
                                                                         jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromBufferSrcRect(JNIEnv env,
                                                                                JClass,
                                                                                JByteBuffer image_buffer,
                                                                                jfloat image_width,
                                                                                jfloat image_height,
                                                                                jfloat sx,
                                                                                jfloat sy,
                                                                                jfloat s_width,
                                                                                jfloat s_height,
                                                                                jboolean flip_y,
                                                                                jint premultiply_alpha,
                                                                                jint color_space_conversion,
                                                                                jint resize_quality,
                                                                                jfloat resize_width,
                                                                                jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromBufferEncoded(JNIEnv env,
                                                                                JClass,
                                                                                JByteBuffer image_buffer,
                                                                                jboolean flip_y,
                                                                                jint premultiply_alpha,
                                                                                jint color_space_conversion,
                                                                                jint resize_quality,
                                                                                jfloat resize_width,
                                                                                jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromBufferEncodedSrcRect(JNIEnv env,
                                                                                       JClass,
                                                                                       JByteBuffer image_buffer,
                                                                                       jfloat sx,
                                                                                       jfloat sy,
                                                                                       jfloat s_width,
                                                                                       jfloat s_height,
                                                                                       jboolean flip_y,
                                                                                       jint premultiply_alpha,
                                                                                       jint color_space_conversion,
                                                                                       jint resize_quality,
                                                                                       jfloat resize_width,
                                                                                       jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromBytes(JNIEnv env,
                                                                        JClass,
                                                                        jbyteArray image_bytes,
                                                                        jfloat image_width,
                                                                        jfloat image_height,
                                                                        jboolean flip_y,
                                                                        jint premultiply_alpha,
                                                                        jint color_space_conversion,
                                                                        jint resize_quality,
                                                                        jfloat resize_width,
                                                                        jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromBytesSrcRect(JNIEnv env,
                                                                               JClass,
                                                                               jbyteArray image_bytes,
                                                                               jfloat image_width,
                                                                               jfloat image_height,
                                                                               jfloat sx,
                                                                               jfloat sy,
                                                                               jfloat s_width,
                                                                               jfloat s_height,
                                                                               jboolean flip_y,
                                                                               jint premultiply_alpha,
                                                                               jint color_space_conversion,
                                                                               jint resize_quality,
                                                                               jfloat resize_width,
                                                                               jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromBytesEncoded(JNIEnv env,
                                                                               JClass,
                                                                               jbyteArray image_bytes,
                                                                               jboolean flip_y,
                                                                               jint premultiply_alpha,
                                                                               jint color_space_conversion,
                                                                               jint resize_quality,
                                                                               jfloat resize_width,
                                                                               jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromBytesEncodedSrcRect(JNIEnv env,
                                                                                      JClass,
                                                                                      jbyteArray image_bytes,
                                                                                      jfloat sx,
                                                                                      jfloat sy,
                                                                                      jfloat s_width,
                                                                                      jfloat s_height,
                                                                                      jboolean flip_y,
                                                                                      jint premultiply_alpha,
                                                                                      jint color_space_conversion,
                                                                                      jint resize_quality,
                                                                                      jfloat resize_width,
                                                                                      jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromAsset(JNIEnv,
                                                                        JClass,
                                                                        jlong asset,
                                                                        jboolean flip_y,
                                                                        jint premultiply_alpha,
                                                                        jint color_space_conversion,
                                                                        jint resize_quality,
                                                                        jfloat resize_width,
                                                                        jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromAssetSrcRect(JNIEnv,
                                                                               JClass,
                                                                               jlong asset,
                                                                               jfloat sx,
                                                                               jfloat sy,
                                                                               jfloat s_width,
                                                                               jfloat s_height,
                                                                               jboolean flip_y,
                                                                               jint premultiply_alpha,
                                                                               jint color_space_conversion,
                                                                               jint resize_quality,
                                                                               jfloat resize_width,
                                                                               jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromBitmap(JNIEnv env,
                                                                         JClass,
                                                                         JObject bitmap,
                                                                         jboolean flip_y,
                                                                         jint premultiply_alpha,
                                                                         jint color_space_conversion,
                                                                         jint resize_quality,
                                                                         jfloat resize_width,
                                                                         jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromBitmapSrcRect(JNIEnv env,
                                                                                JClass,
                                                                                JObject bitmap,
                                                                                jfloat sx,
                                                                                jfloat sy,
                                                                                jfloat s_width,
                                                                                jfloat s_height,
                                                                                jboolean flip_y,
                                                                                jint premultiply_alpha,
                                                                                jint color_space_conversion,
                                                                                jint resize_quality,
                                                                                jfloat resize_width,
                                                                                jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromImageData(JNIEnv,
                                                                            JClass,
                                                                            jlong image_data,
                                                                            jboolean flip_y,
                                                                            jint premultiply_alpha,
                                                                            jint color_space_conversion,
                                                                            jint resize_quality,
                                                                            jfloat resize_width,
                                                                            jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageBitmap_nativeCreateFromImageDataSrcRect(JNIEnv,
                                                                                   JClass,
                                                                                   jlong image_data,
                                                                                   jfloat sx,
                                                                                   jfloat sy,
                                                                                   jfloat s_width,
                                                                                   jfloat s_height,
                                                                                   jboolean flip_y,
                                                                                   jint premultiply_alpha,
                                                                                   jint color_space_conversion,
                                                                                   jint resize_quality,
                                                                                   jfloat resize_width,
                                                                                   jfloat resize_height);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSImageData_nativeInit(JNIEnv, JClass, jint width, jint height);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSImageData_nativeWidth(JNIEnv, JClass, jlong image_data);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSImageData_nativeHeight(JNIEnv, JClass, jlong image_data);
#endif

#if defined(TARGET_OS_ANDROID)
jobject Java_org_nativescript_canvas_TNSImageData_nativeData(JNIEnv env, JClass, jlong image_data);
#endif

#if defined(TARGET_OS_ANDROID)
jint Java_org_nativescript_canvas_TNSImageData_nativeDataLength(JNIEnv, JClass, jlong image_data);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSImageData_nativeDestroy(JNIEnv, JClass, jlong image_data);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSDOMMatrix_nativeInit(JNIEnv, JClass);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeUpdate(JNIEnv env,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloatArray data);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeA(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetA(JNIEnv, JClass, jlong matrix, jfloat a);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeB(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetB(JNIEnv, JClass, jlong matrix, jfloat b);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeC(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetC(JNIEnv, JClass, jlong matrix, jfloat c);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeD(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetD(JNIEnv, JClass, jlong matrix, jfloat d);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeE(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetE(JNIEnv, JClass, jlong matrix, jfloat e);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeF(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetF(JNIEnv, JClass, jlong matrix, jfloat f);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM11(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM11(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m11);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM12(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM12(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m12);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM13(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM13(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m13);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM14(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM14(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m14);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM21(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM21(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m21);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM22(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM22(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m22);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM23(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM23(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m23);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM24(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM24(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m24);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM31(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM31(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m31);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM32(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM32(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m32);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM33(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM33(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m33);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM34(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM34(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m34);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM41(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM41(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m41);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM42(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM42(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m42);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM43(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM43(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m43);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSDOMMatrix_nativeM44(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeSetM44(JNIEnv,
                                                            JClass,
                                                            jlong matrix,
                                                            jfloat m44);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSDOMMatrix_nativeDestroy(JNIEnv, JClass, jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetFillColorWithString(JNIEnv env,
                                                                                           JClass,
                                                                                           jlong context,
                                                                                           JString color);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSCanvasRenderingContext2D_nativeSetStrokeColorWithString(JNIEnv env,
                                                                                             JClass,
                                                                                             jlong context,
                                                                                             JString color);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSColorStyle_nativeDestroy(JNIEnv, JClass, jlong style);
#endif

#if defined(TARGET_OS_ANDROID)
jstring Java_org_nativescript_canvas_TNSColor_nativeGetColorString(JNIEnv env, JClass, jlong color);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSPath2D_nativeInit(JNIEnv, JClass);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSPath2D_nativeCreateWithPath(JNIEnv, JClass, jlong path);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSPath2D_nativeCreateWithString(JNIEnv env,
                                                                    JClass,
                                                                    JString string);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeAddPath(JNIEnv,
                                                          JClass,
                                                          jlong path,
                                                          jlong path_to_add);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeAddPathWithMatrix(JNIEnv,
                                                                    JClass,
                                                                    jlong path,
                                                                    jlong path_to_add,
                                                                    jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeClosePath(JNIEnv, JClass, jlong path);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeMoveTo(JNIEnv,
                                                         JClass,
                                                         jlong path,
                                                         jfloat x,
                                                         jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeLineTo(JNIEnv,
                                                         JClass,
                                                         jlong path,
                                                         jfloat x,
                                                         jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeBezierCurveTo(JNIEnv,
                                                                JClass,
                                                                jlong path,
                                                                jfloat cp1x,
                                                                jfloat cp1y,
                                                                jfloat cp2x,
                                                                jfloat cp2y,
                                                                jfloat x,
                                                                jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeQuadraticCurveTo(JNIEnv,
                                                                   JClass,
                                                                   jlong path,
                                                                   jfloat cpx,
                                                                   jfloat cpy,
                                                                   jfloat x,
                                                                   jfloat y);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeArc(JNIEnv,
                                                      JClass,
                                                      jlong path,
                                                      jfloat x,
                                                      jfloat y,
                                                      jfloat radius,
                                                      jfloat start_angle,
                                                      jfloat end_angle,
                                                      bool anti_clockwise);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeArcTo(JNIEnv,
                                                        JClass,
                                                        jlong path,
                                                        jfloat x1,
                                                        jfloat y1,
                                                        jfloat x2,
                                                        jfloat y2,
                                                        jfloat radius);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeEllipse(JNIEnv,
                                                          JClass,
                                                          jlong path,
                                                          jfloat x,
                                                          jfloat y,
                                                          jfloat radius_x,
                                                          jfloat radius_y,
                                                          jfloat rotation,
                                                          jfloat start_angle,
                                                          jfloat end_angle,
                                                          bool anticlockwise);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeRect(JNIEnv,
                                                       JClass,
                                                       jlong path,
                                                       jfloat x,
                                                       jfloat y,
                                                       jfloat width,
                                                       jfloat height);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPath2D_nativeDestroy(JNIEnv, JClass, jlong path);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSPattern_nativeSetTransform(JNIEnv,
                                                                JClass,
                                                                jlong pattern,
                                                                jlong matrix);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSSVG_nativeDrawSVG(JNIEnv env,
                                                       JClass,
                                                       jlong context,
                                                       JString svg);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSSVG_nativeDrawSVGFromPath(JNIEnv env,
                                                               JClass,
                                                               jlong context,
                                                               JString path);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSTextDecoder_nativeInit(JNIEnv env, JClass, JString decoding);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSTextDecoder_nativeDestroy(JNIEnv, JClass, jlong decoder);
#endif

#if defined(TARGET_OS_ANDROID)
jstring Java_org_nativescript_canvas_TNSTextDecoder_nativeGetEncoding(JNIEnv env,
                                                                      JClass,
                                                                      jlong decoder);
#endif

#if defined(TARGET_OS_ANDROID)
jstring Java_org_nativescript_canvas_TNSTextDecoder_nativeDecodeBuffer(JNIEnv env,
                                                                       JClass,
                                                                       jlong decoder,
                                                                       JByteBuffer data);
#endif

#if defined(TARGET_OS_ANDROID)
jbyteArray Java_org_nativescript_canvas_TNSTextDecoder_nativeDecodeBufferToBytes(JNIEnv env,
                                                                                 JClass,
                                                                                 jlong decoder,
                                                                                 JByteBuffer data);
#endif

#if defined(TARGET_OS_ANDROID)
jstring Java_org_nativescript_canvas_TNSTextDecoder_nativeDecode(JNIEnv env,
                                                                 JClass,
                                                                 jlong decoder,
                                                                 jbyteArray data);
#endif

#if defined(TARGET_OS_ANDROID)
jbyteArray Java_org_nativescript_canvas_TNSTextDecoder_nativeDecodeToBytes(JNIEnv env,
                                                                           JClass,
                                                                           jlong decoder,
                                                                           jbyteArray data);
#endif

#if defined(TARGET_OS_ANDROID)
jlong Java_org_nativescript_canvas_TNSTextEncoder_nativeInit(JNIEnv env, JClass, JString encoding);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSTextEncoder_nativeDestroy(JNIEnv, JClass, jlong encoder);
#endif

#if defined(TARGET_OS_ANDROID)
jstring Java_org_nativescript_canvas_TNSTextEncoder_nativeGetEncoding(JNIEnv env,
                                                                      JClass,
                                                                      jlong encoder);
#endif

#if defined(TARGET_OS_ANDROID)
jbyteArray Java_org_nativescript_canvas_TNSTextEncoder_nativeEncode(JNIEnv env,
                                                                    JClass,
                                                                    jlong encoder,
                                                                    JString text);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetWidth(JNIEnv, JClass, jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetActualBoundingBoxLeft(JNIEnv,
                                                                                  JClass,
                                                                                  jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetActualBoundingBoxRight(JNIEnv,
                                                                                   JClass,
                                                                                   jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetActualBoundingBoxAscent(JNIEnv,
                                                                                    JClass,
                                                                                    jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetActualBoundingBoxDescent(JNIEnv,
                                                                                     JClass,
                                                                                     jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetFontBoundingBoxAscent(JNIEnv,
                                                                                  JClass,
                                                                                  jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetFontBoundingBoxDescent(JNIEnv,
                                                                                   JClass,
                                                                                   jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetEmHeightAscent(JNIEnv,
                                                                           JClass,
                                                                           jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetEmHeightDescent(JNIEnv,
                                                                            JClass,
                                                                            jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetHangingBaseline(JNIEnv,
                                                                            JClass,
                                                                            jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetAlphabeticBaseline(JNIEnv,
                                                                               JClass,
                                                                               jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jfloat Java_org_nativescript_canvas_TNSTextMetrics_nativeGetIdeographicBaseline(JNIEnv,
                                                                                JClass,
                                                                                jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
void Java_org_nativescript_canvas_TNSTextMetrics_nativeDestroy(JNIEnv, JClass, jlong metrics);
#endif

#if defined(TARGET_OS_ANDROID)
jbyteArray Java_org_nativescript_canvas_Utils_nativeGetByteBufferFromBitmap(JNIEnv env,
                                                                            JClass,
                                                                            JObject bitmap);
#endif

#if defined(TARGET_OS_IOS)
void destroy_string(const char *string);
#endif

#if defined(TARGET_OS_IOS)
void destroy_context(long long context);
#endif

#if defined(TARGET_OS_IOS)
void destroy_paint_style(long long style);
#endif

#if defined(TARGET_OS_IOS)
void destroy_text_metrics(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
long long context_init_context(float width,
                               float height,
                               float density,
                               int buffer_id,
                               uintptr_t samples,
                               bool alpha,
                               unsigned int font_color,
                               float ppi,
                               enum TextDirection direction);
#endif

#if defined(TARGET_OS_IOS)
long long context_init_context_with_custom_surface(float width,
                                                   float height,
                                                   float density,
                                                   bool alpha,
                                                   int font_color,
                                                   float ppi,
                                                   enum TextDirection direction);
#endif

#if defined(TARGET_OS_IOS)
void context_resize_custom_surface(long long context,
                                   float width,
                                   float height,
                                   float density,
                                   bool alpha,
                                   float ppi);
#endif

#if defined(TARGET_OS_IOS)
void context_resize_surface(long long context,
                            float width,
                            float height,
                            float density,
                            int buffer_id,
                            uintptr_t samples,
                            bool alpha,
                            float ppi);
#endif

#if defined(TARGET_OS_IOS)
const char *context_data_url(long long context, const char *format, float quality);
#endif

#if defined(TARGET_OS_IOS)
struct U8Array *context_snapshot_canvas(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_flush(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_custom_with_buffer_flush(long long context,
                                      uint8_t *buf,
                                      uintptr_t buf_size,
                                      float width,
                                      float height);
#endif

#if defined(TARGET_OS_IOS)
void context_set_direction(long long context, enum TextDirection direction);
#endif

#if defined(TARGET_OS_IOS)
enum TextDirection context_get_direction(const struct Context *context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_fill_style(long long context, long long style);
#endif

#if defined(TARGET_OS_IOS)
struct PaintStyleValue *context_get_fill_style(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_filter(long long context, const char *filter);
#endif

#if defined(TARGET_OS_IOS)
const char *context_get_filter(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_font(long long context, const char *filter);
#endif

#if defined(TARGET_OS_IOS)
const char *context_get_font(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_global_alpha(long long context, float alpha);
#endif

#if defined(TARGET_OS_IOS)
float context_get_global_alpha(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_global_composite_operation(long long context,
                                            enum CompositeOperationType operation);
#endif

#if defined(TARGET_OS_IOS)
enum CompositeOperationType context_get_global_composite_operation(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_image_smoothing_enabled(long long context, bool enabled);
#endif

#if defined(TARGET_OS_IOS)
bool context_get_image_smoothing_enabled(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_image_smoothing_quality(long long context, enum ImageSmoothingQuality quality);
#endif

#if defined(TARGET_OS_IOS)
enum ImageSmoothingQuality context_get_image_smoothing_quality(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_line_cap(long long context, enum LineCap cap);
#endif

#if defined(TARGET_OS_IOS)
enum LineCap context_get_line_cap(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_line_dash_offset(long long context, float offset);
#endif

#if defined(TARGET_OS_IOS)
float context_get_line_dash_offset(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_line_join(long long context, enum LineJoin join);
#endif

#if defined(TARGET_OS_IOS)
enum LineJoin context_get_line_join(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_line_width(long long context, float width);
#endif

#if defined(TARGET_OS_IOS)
float context_get_line_width(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_miter_limit(long long context, float limit);
#endif

#if defined(TARGET_OS_IOS)
float context_get_miter_limit(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_shadow_blur(long long context, float blur);
#endif

#if defined(TARGET_OS_IOS)
float context_get_shadow_blur(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_shadow_color(long long context, uint8_t r, uint8_t g, uint8_t b, uint8_t a);
#endif

#if defined(TARGET_OS_IOS)
void context_set_shadow_color_string(long long context, const char *color);
#endif

#if defined(TARGET_OS_IOS)
const char *context_get_shadow_color(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_shadow_offset_x(long long context, float x);
#endif

#if defined(TARGET_OS_IOS)
float context_get_shadow_offset_x(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_shadow_offset_y(long long context, float y);
#endif

#if defined(TARGET_OS_IOS)
float context_get_shadow_offset_y(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_stroke_style(long long context, long long style);
#endif

#if defined(TARGET_OS_IOS)
struct PaintStyleValue *context_get_stroke_style(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_text_align(long long context, enum TextAlign align);
#endif

#if defined(TARGET_OS_IOS)
enum TextAlign context_get_text_align(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_set_text_baseline(long long context, enum TextBaseLine baseline);
#endif

#if defined(TARGET_OS_IOS)
enum TextBaseLine context_get_text_baseline(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_arc(long long context,
                 float x,
                 float y,
                 float radius,
                 float start_angle,
                 float end_angle,
                 bool anti_clockwise);
#endif

#if defined(TARGET_OS_IOS)
void context_arc_to(long long context, float x1, float y1, float x2, float y2, float radius);
#endif

#if defined(TARGET_OS_IOS)
void context_begin_path(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_bezier_curve_to(long long context,
                             float cp1x,
                             float cp1y,
                             float cp2x,
                             float cp2y,
                             float x,
                             float y);
#endif

#if defined(TARGET_OS_IOS)
void context_clear_rect(long long context, float x, float y, float width, float height);
#endif

#if defined(TARGET_OS_IOS)
void context_clip(long long context, long long path, enum FillRule rule);
#endif

#if defined(TARGET_OS_IOS)
void context_clip_rule(long long context, enum FillRule rule);
#endif

#if defined(TARGET_OS_IOS)
void context_close_path(long long context);
#endif

#if defined(TARGET_OS_IOS)
long long context_create_image_data(int width, int height);
#endif

#if defined(TARGET_OS_IOS)
long long context_create_linear_gradient(long long context, float x0, float y0, float x1, float y1);
#endif

#if defined(TARGET_OS_IOS)
long long context_create_pattern(long long context,
                                 const uint8_t *image_data,
                                 uintptr_t image_len,
                                 int width,
                                 int height,
                                 enum Repetition repetition);
#endif

#if defined(TARGET_OS_IOS)
long long context_create_pattern_asset(long long context,
                                       long long asset,
                                       enum Repetition repetition);
#endif

#if defined(TARGET_OS_IOS)
long long context_create_pattern_encoded(long long context,
                                         const uint8_t *image_data,
                                         uintptr_t image_len,
                                         enum Repetition repetition);
#endif

#if defined(TARGET_OS_IOS)
long long context_create_radial_gradient(long long context,
                                         float x0,
                                         float y0,
                                         float r0,
                                         float x1,
                                         float y1,
                                         float r1);
#endif

#if defined(TARGET_OS_IOS)
void context_draw_image_dx_dy(long long context,
                              const uint8_t *image_data,
                              uintptr_t image_len,
                              float width,
                              float height,
                              float dx,
                              float dy);
#endif

#if defined(TARGET_OS_IOS)
void context_draw_image_dx_dy_dw_dh(long long context,
                                    const uint8_t *image_data,
                                    uintptr_t image_len,
                                    float width,
                                    float height,
                                    float dx,
                                    float dy,
                                    float d_width,
                                    float d_height);
#endif

#if defined(TARGET_OS_IOS)
void context_draw_image(long long context,
                        const uint8_t *image_data,
                        uintptr_t image_len,
                        float width,
                        float height,
                        float sx,
                        float sy,
                        float s_width,
                        float s_height,
                        float dx,
                        float dy,
                        float d_width,
                        float d_height);
#endif

#if defined(TARGET_OS_IOS)
void context_draw_image_encoded_dx_dy(long long context,
                                      const uint8_t *image_data,
                                      uintptr_t image_len,
                                      float dx,
                                      float dy);
#endif

#if defined(TARGET_OS_IOS)
void context_draw_image_encoded_dx_dy_dw_dh(long long context,
                                            const uint8_t *image_data,
                                            uintptr_t image_len,
                                            float dx,
                                            float dy,
                                            float d_width,
                                            float d_height);
#endif

#if defined(TARGET_OS_IOS)
void context_draw_image_encoded(long long context,
                                const uint8_t *image_data,
                                uintptr_t image_len,
                                float sx,
                                float sy,
                                float s_width,
                                float s_height,
                                float dx,
                                float dy,
                                float d_width,
                                float d_height);
#endif

#if defined(TARGET_OS_IOS)
void context_draw_image_dx_dy_asset(long long context, long long asset, float dx, float dy);
#endif

#if defined(TARGET_OS_IOS)
void context_draw_image_dx_dy_dw_dh_asset(long long context,
                                          long long asset,
                                          float dx,
                                          float dy,
                                          float d_width,
                                          float d_height);
#endif

#if defined(TARGET_OS_IOS)
void context_draw_image_asset(long long context,
                              long long asset,
                              float sx,
                              float sy,
                              float s_width,
                              float s_height,
                              float dx,
                              float dy,
                              float d_width,
                              float d_height);
#endif

#if defined(TARGET_OS_IOS)
void context_ellipse(long long context,
                     float x,
                     float y,
                     float radius_x,
                     float radius_y,
                     float rotation,
                     float start_angle,
                     float end_angle,
                     bool anticlockwise);
#endif

#if defined(TARGET_OS_IOS)
void context_fill(long long context, long long path, enum FillRule rule);
#endif

#if defined(TARGET_OS_IOS)
void context_fill_rect(long long context, float x, float y, float width, float height);
#endif

#if defined(TARGET_OS_IOS)
void context_fill_text(long long context, const char *text, float x, float y, float width);
#endif

#if defined(TARGET_OS_IOS)
long long context_get_image_data(long long context, float sx, float sy, float sw, float sh);
#endif

#if defined(TARGET_OS_IOS)
struct F32Array *context_get_line_dash(long long context);
#endif

#if defined(TARGET_OS_IOS)
long long context_get_transform(long long context);
#endif

#if defined(TARGET_OS_IOS)
bool context_is_point_in_path(long long context,
                              long long path,
                              float x,
                              float y,
                              enum FillRule rule);
#endif

#if defined(TARGET_OS_IOS)
bool context_is_point_in_stroke(long long context, long long path, float x, float y);
#endif

#if defined(TARGET_OS_IOS)
void context_line_to(long long context, float x, float y);
#endif

#if defined(TARGET_OS_IOS)
long long context_measure_text(long long context, const char *text);
#endif

#if defined(TARGET_OS_IOS)
void context_move_to(long long context, float x, float y);
#endif

#if defined(TARGET_OS_IOS)
void context_put_image_data(long long context,
                            long long image_data,
                            float dx,
                            float dy,
                            float dirty_x,
                            float dirty_y,
                            float dirty_width,
                            float dirty_height);
#endif

#if defined(TARGET_OS_IOS)
void context_quadratic_curve_to(long long context, float cpx, float cpy, float x, float y);
#endif

#if defined(TARGET_OS_IOS)
void context_rect(long long context, float x, float y, float width, float height);
#endif

#if defined(TARGET_OS_IOS)
void context_reset_transform(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_restore(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_rotate(long long context, float angle);
#endif

#if defined(TARGET_OS_IOS)
void context_save(long long context);
#endif

#if defined(TARGET_OS_IOS)
void context_scale(long long context, float x, float y);
#endif

#if defined(TARGET_OS_IOS)
void context_set_line_dash(long long context, const float *data, uintptr_t data_length);
#endif

#if defined(TARGET_OS_IOS)
void context_set_transform(long long context, float a, float b, float c, float d, float e, float f);
#endif

#if defined(TARGET_OS_IOS)
void context_set_transform_matrix(long long context, long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void context_stroke(long long context, long long path);
#endif

#if defined(TARGET_OS_IOS)
void context_stroke_rect(long long context, float x, float y, float width, float height);
#endif

#if defined(TARGET_OS_IOS)
void context_stroke_text(long long context, const char *text, float x, float y, float width);
#endif

#if defined(TARGET_OS_IOS)
void context_transform(long long context, float a, float b, float c, float d, float e, float f);
#endif

#if defined(TARGET_OS_IOS)
void context_translate(long long context, float x, float y);
#endif

#if defined(TARGET_OS_IOS)
void gl_tex_image_2D_asset(unsigned int target,
                           int level,
                           int internalformat,
                           int border,
                           unsigned int format,
                           unsigned int image_type,
                           long long asset,
                           bool flip_y);
#endif

#if defined(TARGET_OS_IOS)
void gl_tex_sub_image_2D_asset(unsigned int target,
                               int level,
                               int xoffset,
                               int yoffset,
                               unsigned int format,
                               unsigned int image_type,
                               long long asset,
                               bool flip_y);
#endif

#if defined(TARGET_OS_IOS)
void gl_tex_image_3D_asset(unsigned int target,
                           int level,
                           int internalformat,
                           int width,
                           int height,
                           int depth,
                           int border,
                           unsigned int format,
                           unsigned int image_type,
                           long long asset,
                           bool flip_y);
#endif

#if defined(TARGET_OS_IOS)
void gl_tex_sub_image_3D_asset(unsigned int target,
                               int level,
                               int xoffset,
                               int yoffset,
                               int zoffset,
                               int width,
                               int height,
                               int depth,
                               unsigned int format,
                               unsigned int image_type,
                               long long asset,
                               bool flip_y);
#endif

#if defined(TARGET_OS_IOS)
void gl_vertex_attrib_pointer(unsigned int index,
                              int size,
                              unsigned int pointer_type,
                              bool normalized,
                              int stride,
                              long long offset);
#endif

#if defined(TARGET_OS_IOS)
long long gl_get_vertex_attrib_offset(unsigned int index, unsigned int pname);
#endif

#if defined(TARGET_OS_IOS)
void gradient_add_color_stop(long long style, float stop, const char *color);
#endif

#if defined(TARGET_OS_IOS)
long long image_asset_create(void);
#endif

#if defined(TARGET_OS_IOS)
bool image_asset_load_from_path(long long asset, const char *path);
#endif

#if defined(TARGET_OS_IOS)
bool image_asset_load_from_raw(long long asset, const uint8_t *array, uintptr_t size);
#endif

#if defined(TARGET_OS_IOS)
struct U8Array *image_asset_get_bytes(long long asset);
#endif

#if defined(TARGET_OS_IOS)
struct U8Array *image_asset_get_rgba_bytes(long long asset);
#endif

#if defined(TARGET_OS_IOS)
struct U8Array *image_asset_get_rgb_bytes(long long asset);
#endif

#if defined(TARGET_OS_IOS)
unsigned int image_asset_width(long long asset);
#endif

#if defined(TARGET_OS_IOS)
unsigned int image_asset_height(long long asset);
#endif

#if defined(TARGET_OS_IOS)
const char *image_asset_get_error(long long asset);
#endif

#if defined(TARGET_OS_IOS)
bool image_asset_has_error(long long asset);
#endif

#if defined(TARGET_OS_IOS)
bool image_asset_scale(long long asset, unsigned int x, unsigned int y);
#endif

#if defined(TARGET_OS_IOS)
bool image_asset_flip_x(long long asset);
#endif

#if defined(TARGET_OS_IOS)
bool image_asset_flip_x_in_place(long long asset);
#endif

#if defined(TARGET_OS_IOS)
bool image_asset_flip_y(long long asset);
#endif

#if defined(TARGET_OS_IOS)
void image_asset_flip_y_in_place_owned(uint8_t *buf, uintptr_t length);
#endif

#if defined(TARGET_OS_IOS)
void image_asset_flip_x_in_place_owned(uint8_t *buf, uintptr_t length);
#endif

#if defined(TARGET_OS_IOS)
bool image_asset_flip_y_in_place(long long asset);
#endif

#if defined(TARGET_OS_IOS)
bool image_asset_save_path(long long asset, const char *path, unsigned int format);
#endif

#if defined(TARGET_OS_IOS)
void destroy_image_asset(long long asset);
#endif

#if defined(TARGET_OS_IOS)
long long image_bitmap_create_from_bytes(const uint8_t *image_bytes,
                                         uintptr_t image_size,
                                         float image_width,
                                         float image_height,
                                         bool flip_y,
                                         int32_t premultiply_alpha,
                                         int32_t color_space_conversion,
                                         int32_t resize_quality,
                                         float resize_width,
                                         float resize_height);
#endif

#if defined(TARGET_OS_IOS)
long long image_bitmap_create_from_bytes_src_rect(const uint8_t *image_bytes,
                                                  uintptr_t image_size,
                                                  float image_width,
                                                  float image_height,
                                                  float sx,
                                                  float sy,
                                                  float s_width,
                                                  float s_height,
                                                  bool flip_y,
                                                  int32_t premultiply_alpha,
                                                  int32_t color_space_conversion,
                                                  int32_t resize_quality,
                                                  float resize_width,
                                                  float resize_height);
#endif

#if defined(TARGET_OS_IOS)
long long image_bitmap_create_from_image_asset(long long asset,
                                               bool flip_y,
                                               int premultiply_alpha,
                                               int color_space_conversion,
                                               int resize_quality,
                                               float resize_width,
                                               float resize_height);
#endif

#if defined(TARGET_OS_IOS)
long long image_bitmap_create_from_image_asset_src_rect(long long asset,
                                                        float sx,
                                                        float sy,
                                                        float s_width,
                                                        float s_height,
                                                        bool flip_y,
                                                        int premultiply_alpha,
                                                        int color_space_conversion,
                                                        int resize_quality,
                                                        float resize_width,
                                                        float resize_height);
#endif

#if defined(TARGET_OS_IOS)
long long image_bitmap_create_from_bytes_encoded(const uint8_t *image_bytes,
                                                 uintptr_t image_size,
                                                 bool flip_y,
                                                 int32_t premultiply_alpha,
                                                 int32_t color_space_conversion,
                                                 int32_t resize_quality,
                                                 float resize_width,
                                                 float resize_height);
#endif

#if defined(TARGET_OS_IOS)
long long image_bitmap_create_from_bytes_encoded_src_rect(const uint8_t *image_bytes,
                                                          uintptr_t image_size,
                                                          float sx,
                                                          float sy,
                                                          float s_width,
                                                          float s_height,
                                                          bool flip_y,
                                                          int32_t premultiply_alpha,
                                                          int32_t color_space_conversion,
                                                          int32_t resize_quality,
                                                          float resize_width,
                                                          float resize_height);
#endif

#if defined(TARGET_OS_IOS)
long long image_bitmap_create_from_image_data(long long image_data,
                                              bool flip_y,
                                              int premultiply_alpha,
                                              int color_space_conversion,
                                              int resize_quality,
                                              float resize_width,
                                              float resize_height);
#endif

#if defined(TARGET_OS_IOS)
long long image_bitmap_create_from_image_data_src_rect(long long image_data,
                                                       float sx,
                                                       float sy,
                                                       float s_width,
                                                       float s_height,
                                                       bool flip_y,
                                                       int premultiply_alpha,
                                                       int color_space_conversion,
                                                       int resize_quality,
                                                       float resize_width,
                                                       float resize_height);
#endif

#if defined(TARGET_OS_IOS)
long long image_data_create(int width, int height);
#endif

#if defined(TARGET_OS_IOS)
int image_data_width(long long image_data);
#endif

#if defined(TARGET_OS_IOS)
int image_data_height(long long image_data);
#endif

#if defined(TARGET_OS_IOS)
uint8_t *image_data_data(long long image_data);
#endif

#if defined(TARGET_OS_IOS)
uintptr_t image_data_data_length(long long image_data);
#endif

#if defined(TARGET_OS_IOS)
void destroy_image_data(long long image_data);
#endif

#if defined(TARGET_OS_IOS)
long long matrix_create(void);
#endif

#if defined(TARGET_OS_IOS)
void matrix_update(long long matrix, const float *data, uintptr_t data_len);
#endif

#if defined(TARGET_OS_IOS)
float matrix_a(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_a(long long matrix, float a);
#endif

#if defined(TARGET_OS_IOS)
float matrix_b(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_b(long long matrix, float b);
#endif

#if defined(TARGET_OS_IOS)
float matrix_c(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_c(long long matrix, float c);
#endif

#if defined(TARGET_OS_IOS)
float matrix_d(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_d(long long matrix, float d);
#endif

#if defined(TARGET_OS_IOS)
float matrix_e(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_e(long long matrix, float e);
#endif

#if defined(TARGET_OS_IOS)
float matrix_f(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_f(long long matrix, float f);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m11(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m11(long long matrix, float m11);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m12(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m12(long long matrix, float m12);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m13(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m13(long long matrix, float m13);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m14(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m14(long long matrix, float m14);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m21(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m21(long long matrix, float m21);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m22(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m22(long long matrix, float m22);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m23(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m23(long long matrix, float m23);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m24(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m24(long long matrix, float m24);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m31(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m31(long long matrix, float m31);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m32(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m32(long long matrix, float m32);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m33(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m33(long long matrix, float m33);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m34(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m34(long long matrix, float m34);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m41(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m41(long long matrix, float m41);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m42(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m42(long long matrix, float m42);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m43(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m43(long long matrix, float m43);
#endif

#if defined(TARGET_OS_IOS)
float matrix_m44(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void matrix_set_m44(long long matrix, float m44);
#endif

#if defined(TARGET_OS_IOS)
void destroy_matrix(long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void paint_style_set_fill_color_with_string(long long context, const char *color);
#endif

#if defined(TARGET_OS_IOS)
void paint_style_set_stroke_color_with_string(long long context, const char *color);
#endif

#if defined(TARGET_OS_IOS)
const char *paint_style_get_color_string(long long color);
#endif

#if defined(TARGET_OS_IOS)
long long path_create(void);
#endif

#if defined(TARGET_OS_IOS)
long long path_create_with_path(long long path);
#endif

#if defined(TARGET_OS_IOS)
long long path_create_with_string(const char *string);
#endif

#if defined(TARGET_OS_IOS)
void path_add_path(long long path, long long path_to_add);
#endif

#if defined(TARGET_OS_IOS)
void path_add_path_with_matrix(long long path, long long path_to_add, long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void path_close_path(long long path);
#endif

#if defined(TARGET_OS_IOS)
void path_move_to(long long path, float x, float y);
#endif

#if defined(TARGET_OS_IOS)
void path_line_to(long long path, float x, float y);
#endif

#if defined(TARGET_OS_IOS)
void path_bezier_curve_to(long long path,
                          float cp1x,
                          float cp1y,
                          float cp2x,
                          float cp2y,
                          float x,
                          float y);
#endif

#if defined(TARGET_OS_IOS)
void path_quadratic_curve_to(long long path, float cpx, float cpy, float x, float y);
#endif

#if defined(TARGET_OS_IOS)
void path_arc(long long path,
              float x,
              float y,
              float radius,
              float start_angle,
              float end_angle,
              bool anti_clockwise);
#endif

#if defined(TARGET_OS_IOS)
void path_arc_to(long long path, float x1, float y1, float x2, float y2, float radius);
#endif

#if defined(TARGET_OS_IOS)
void path_ellipse(long long path,
                  float x,
                  float y,
                  float radius_x,
                  float radius_y,
                  float rotation,
                  float start_angle,
                  float end_angle,
                  bool anticlockwise);
#endif

#if defined(TARGET_OS_IOS)
void path_rect(long long path, float x, float y, float width, float height);
#endif

#if defined(TARGET_OS_IOS)
void destroy_path(long long path);
#endif

#if defined(TARGET_OS_IOS)
void pattern_set_transform(long long pattern, long long matrix);
#endif

#if defined(TARGET_OS_IOS)
void svg_draw_from_string(long long context, const int8_t *svg);
#endif

#if defined(TARGET_OS_IOS)
void svg_draw_from_path(long long context, const int8_t *path);
#endif

#if defined(TARGET_OS_IOS)
long long text_decoder_create(const char *decoding);
#endif

#if defined(TARGET_OS_IOS)
const char *text_decoder_get_encoding(long long decoder);
#endif

#if defined(TARGET_OS_IOS)
const char *text_decoder_decode(long long decoder, const uint8_t *data, uintptr_t len);
#endif

#if defined(TARGET_OS_IOS)
const struct U8Array *text_decoder_decode_to_bytes(long long decoder,
                                                   const uint8_t *data,
                                                   uintptr_t len);
#endif

#if defined(TARGET_OS_IOS)
const char *text_decoder_decode_u16(long long decoder, const uint16_t *data, uintptr_t len);
#endif

#if defined(TARGET_OS_IOS)
const char *text_decoder_decode_i16(long long decoder, const int16_t *data, uintptr_t len);
#endif

#if defined(TARGET_OS_IOS)
const char *text_decoder_decode_i32(long long decoder, const int32_t *data, uintptr_t len);
#endif

#if defined(TARGET_OS_IOS)
void destroy_text_decoder(long long decoder);
#endif

#if defined(TARGET_OS_IOS)
struct U8Array *text_decoder_decode_bytes(long long decoder, const uint8_t *data, uintptr_t len);
#endif

#if defined(TARGET_OS_IOS)
struct U8Array *text_decoder_decode_u16_bytes(long long decoder,
                                              const uint16_t *data,
                                              uintptr_t len);
#endif

#if defined(TARGET_OS_IOS)
struct U8Array *text_decoder_decode_i16_bytes(long long decoder,
                                              const int16_t *data,
                                              uintptr_t len);
#endif

#if defined(TARGET_OS_IOS)
struct U8Array *text_decoder_decode_i32_bytes(long long decoder,
                                              const int32_t *data,
                                              uintptr_t len);
#endif

#if defined(TARGET_OS_IOS)
struct U8Array *text_decoder_decode_u32_bytes(long long decoder,
                                              const uint32_t *data,
                                              uintptr_t len);
#endif

#if defined(TARGET_OS_IOS)
long long text_encoder_create(const char *encoding);
#endif

#if defined(TARGET_OS_IOS)
const char *text_encoder_get_encoding(long long encoder);
#endif

#if defined(TARGET_OS_IOS)
struct U8Array *text_encoder_encode(long long encoder, const char *text);
#endif

#if defined(TARGET_OS_IOS)
void destroy_text_encoder(long long encoder);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_width(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_actual_bounding_box_left(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_actual_bounding_box_right(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_actual_bounding_box_ascent(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_actual_bounding_box_descent(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_font_bounding_box_ascent(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_font_bounding_box_descent(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_em_height_ascent(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_em_height_descent(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_hanging_baseline(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_alphabetic_baseline(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
float text_metrics_get_ideographic_baseline(long long metrics);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place(uint8_t *data, uintptr_t length, uintptr_t bytes_per_row, uintptr_t height);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_3d(uint8_t *data,
                        uintptr_t length,
                        uintptr_t bytes_per_row,
                        uintptr_t height,
                        uintptr_t depth);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_3d_i8(int8_t *data,
                           uintptr_t length,
                           uintptr_t bytes_per_row,
                           uintptr_t height,
                           uintptr_t depth);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_3d_u16(uint16_t *data,
                            uintptr_t length,
                            uintptr_t bytes_per_row,
                            uintptr_t height,
                            uintptr_t depth);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_3d_i16(int16_t *data,
                            uintptr_t length,
                            uintptr_t bytes_per_row,
                            uintptr_t height,
                            uintptr_t depth);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_3d_u32(uint32_t *data,
                            uintptr_t length,
                            uintptr_t bytes_per_row,
                            uintptr_t height,
                            uintptr_t depth);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_3d_i32(int32_t *data,
                            uintptr_t length,
                            uintptr_t bytes_per_row,
                            uintptr_t height,
                            uintptr_t depth);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_3d_f32(float *data,
                            uintptr_t length,
                            uintptr_t bytes_per_row,
                            uintptr_t height,
                            uintptr_t depth);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_3d_f64(double *data,
                            uintptr_t length,
                            uintptr_t bytes_per_row,
                            uintptr_t height,
                            uintptr_t depth);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_i8(int8_t *data, uintptr_t length, uintptr_t bytes_per_row, uintptr_t height);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_u16(uint16_t *data,
                         uintptr_t length,
                         uintptr_t bytes_per_row,
                         uintptr_t height);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_i16(int16_t *data,
                         uintptr_t length,
                         uintptr_t bytes_per_row,
                         uintptr_t height);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_u32(uint32_t *data,
                         uintptr_t length,
                         uintptr_t bytes_per_row,
                         uintptr_t height);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_i32(int32_t *data,
                         uintptr_t length,
                         uintptr_t bytes_per_row,
                         uintptr_t height);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_f32(float *data, uintptr_t length, uintptr_t bytes_per_row, uintptr_t height);
#endif

#if defined(TARGET_OS_IOS)
void flip_y_in_place_f64(double *data, uintptr_t length, uintptr_t bytes_per_row, uintptr_t height);
#endif

#endif /* CBINDGEN_BINDINGS_H */
